{
	"info": {
		"_postman_id": "db66b6fd-a657-4367-b9a2-0a769a973406",
		"name": "JSONPlaceholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/posts",
			"item": [
				{
					"name": "criarPublicacaoInvalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if the response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/posts/",
							"host": [
								"{{url}}"
							],
							"path": [
								"posts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "validarAtualizacaoPublicacao",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Name user found in response body\", function () {\r",
									"   ! pm.expect(pm.response.text()).to.include(\"TESTE\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check if the response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"TESTE\",\r\n    \"body\": \"teste\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/posts/1?userId=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"posts",
								"1"
							],
							"query": [
								{
									"key": "userId",
									"value": "1"
								},
								{
									"key": "title",
									"value": null,
									"disabled": true
								},
								{
									"key": "id",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "buscarTodasPublicacoes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Publicacoes encontradas\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/posts/",
							"host": [
								"{{url}}"
							],
							"path": [
								"posts",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/users",
			"item": [
				{
					"name": "validarCadastrarUsuarioInvalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if the response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "validarCadastrarUsuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response length is 1\", function () {\r",
									"    pm.response.length == 1;\r",
									"});\r",
									"\r",
									"pm.test(\"Name user found in response body\", function () {\r",
									"   ! pm.expect(pm.response.text()).to.include(\"TESTE\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check if the response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"TESTE\",\r\n\"username\": \"TESTE_NAME\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "consultarUsuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response length is 10\", function () {\r",
									"    pm.response.length == 10;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check if the response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://jsonplaceholder.typicode.com",
			"type": "default"
		}
	]
}